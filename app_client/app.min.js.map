{"version":3,"sources":["app.min.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","authentication","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","homeCtrl","console","log","profileCtrl","meanData","vm","this","users","getProfile","success","data","user","error","e","usersGrab","$inject","usersCtrl","loginCtrl","$scope","credentials","email","password","onSubmit","login","err","alert","then","registerCtrl","firstName","lastName","register","$http","$window","saveToken","token","localStorage","getToken","payload","split","atob","JSON","parse","exp","Date","now","currentUser","name","post","logout","removeItem","service","get","headers","Authorization","navigationCtrl","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n\n  angular.module('meanApp', ['ngRoute']);\n\n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/users', {\n        templateUrl: '/users/users.view.html',\n        controller: 'usersCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/settings', {\n        templateUrl: '/settings/settings.html',\n        controllerAs: 'vm'\n      })\n      .when('/reports', {\n        templateUrl: '/reports/reports.html',\n        controllerAs: 'vm'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n  }\n\n  function run($rootScope, $location, authentication) {\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\n        $location.path('/');\n      }\n    });\n  }\n  \n  angular\n    .module('meanApp')\n    .config(['$routeProvider', '$locationProvider', config])\n    .run(['$rootScope', '$location', 'authentication', run]);\n\n})();\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('homeCtrl', homeCtrl);\n\n    function homeCtrl () {\n      console.log('Home controller is running');\n    }\n\n})();\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$location', 'meanData'];\n  function profileCtrl($location, meanData) {\n    var vm = this;\n\n    vm.users = [];\n\n    meanData.getProfile()\n      .success(function(data) {\n        vm.user = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n      \n    meanData.usersGrab()\n      .success(function(data) {\n        vm.users = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n      \n  }\n\n})();\n(function () {\n\n  angular\n  .module('meanApp')\n  .controller('usersCtrl', usersCtrl);\n\n  usersCtrl.$inject = ['$location', 'authentication', 'meanData'];\n  function usersCtrl($location, authentication, meanData) {\n    var vm = this;\n    \n    vm.users = [];\n    \n    authentication.usersGrab()\n      .success(function(data) {\n        vm.users = data;\n        console.log(data);\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n    \n    \n  }\n\n})();\n(function () {\n\n  angular\n  .module('meanApp')\n  .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'authentication', '$scope'];\n  function loginCtrl($location, authentication, $scope) {\n    var vm = this;\n\n    vm.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      authentication\n        .login(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('/users');\n        });\n    };\n\n  }\n\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('registerCtrl', registerCtrl);\n\n  registerCtrl.$inject = ['$location', 'authentication'];\n  function registerCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      firstName : \"\",\n      lastName : \"\",\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      console.log('Submitting registration');\n      authentication\n        .register(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('users');\n        });\n    };\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .service('authentication', authentication);\n\n  authentication.$inject = ['$http', '$window'];\n  function authentication ($http, $window) {\n\n    var saveToken = function (token) {\n      $window.localStorage['mean-token'] = token;\n    };\n\n    var getToken = function () {\n      return $window.localStorage['mean-token'];\n    };\n\n    var isLoggedIn = function() {\n      var token = getToken();\n      var payload;\n\n      if(token){\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var token = getToken();\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          email : payload.email,\n          name : payload.name\n        };\n      }\n    };\n\n    register = function(user) {\n      return $http.post('/api/register', user).success(function(data){\n        saveToken(data.token);\n      });\n    };\n\n    login = function(user) {\n      return $http.post('/api/login', user).success(function(data) {\n        saveToken(data.token);\n      });\n    };\n\n    logout = function() {\n      $window.localStorage.removeItem('mean-token');\n    };\n    \n    usersGrab = function() {\n      return $http.post('/api/users');\n    };\n\n    return {\n      currentUser : currentUser,\n      saveToken : saveToken,\n      getToken : getToken,\n      isLoggedIn : isLoggedIn,\n      register : register,\n      login : login,\n      logout : logout,\n      usersGrab : usersGrab\n    };\n  }\n\n\n})();\n(function() {\n\n  angular\n    .module('meanApp')\n    .service('meanData', meanData);\n\n  meanData.$inject = ['$http', 'authentication'];\n  function meanData ($http, authentication) {\n\n    var getProfile = function () {\n      return $http.get('/api/profile', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    return {\n      getProfile : getProfile\n    };\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location','authentication'];\n  function navigationCtrl($location, authentication) {\n    var vm = this;\n\n    vm.isLoggedIn = authentication.isLoggedIn();\n\n    vm.currentUser = authentication.currentUser();\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();"]}